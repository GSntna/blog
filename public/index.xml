<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gustavo Santana</title>
    <link>https://gustats.com/</link>
    <description>Recent content on Gustavo Santana</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://gustats.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Scrapping</title>
      <link>https://gustats.com/posts/programming/web_scrapping/</link>
      <pubDate>Mon, 12 May 2025 10:50:29 +0200</pubDate>
      <guid>https://gustats.com/posts/programming/web_scrapping/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;Web scrapping&lt;/em&gt; is a term used for a program to download and process content from&#xA;the web. Python uses several modules to achive this:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;webbrowser&lt;/code&gt;: comes with Python, opens a browser to a specific page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;requests&lt;/code&gt;: downloads files and web pages from the internet&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;bs4&lt;/code&gt;: parses HTML&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;selenium&lt;/code&gt;: launches and controls a web browser. It is able to fill in forms&#xA;and simulate clicks on the browser.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;requests&#34;&gt;Requests&lt;/h2&gt;&#xA;&lt;p&gt;To use the &lt;code&gt;requests&lt;/code&gt; module, the function &lt;code&gt;requests.get(url)&lt;/code&gt; is used to get a&#xA;&lt;code&gt;Response&lt;/code&gt; object, which has some attributes that allow to work with the results&#xA;from the call to the url.&lt;/p&gt;</description>
    </item>
    <item>
      <title>API Basics</title>
      <link>https://gustats.com/posts/programming/apis/</link>
      <pubDate>Mon, 12 May 2025 10:36:03 +0200</pubDate>
      <guid>https://gustats.com/posts/programming/apis/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Application Programming Interfaces (APIs) act as a software intermediary,&#xA;allowing applications to exchange data and requests without needing to know&#xA;the internal workings of the other application&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Letter&lt;/th&gt;&#xA;          &lt;th&gt;Word&lt;/th&gt;&#xA;          &lt;th&gt;Meaning&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;A&lt;/td&gt;&#xA;          &lt;td&gt;Application&lt;/td&gt;&#xA;          &lt;td&gt;Software that does a task&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;P&lt;/td&gt;&#xA;          &lt;td&gt;Program&lt;/td&gt;&#xA;          &lt;td&gt;Program (P) that does the task in the Application (A)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;I&lt;/td&gt;&#xA;          &lt;td&gt;Interface&lt;/td&gt;&#xA;          &lt;td&gt;Place (I) to tell the program (P) to run&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Some of the advantages of using an API are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regular expressions (regex)</title>
      <link>https://gustats.com/posts/programming/regex/</link>
      <pubDate>Sat, 10 May 2025 19:04:01 +0200</pubDate>
      <guid>https://gustats.com/posts/programming/regex/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Regular expressions are a powerful tool used for searching, matching and&#xA;manipulating strings based on patterns. To use it the following steps can be&#xA;followed:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Import the &lt;strong&gt;regex&lt;/strong&gt; module with &lt;code&gt;import re&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Create a &lt;em&gt;Regex object&lt;/em&gt; with the &lt;code&gt;re.compile()&lt;/code&gt; function.&#xA;(Remember to use a raw string.)&lt;/li&gt;&#xA;&lt;li&gt;Pass the string to search into the Regex object’s &lt;code&gt;search()&lt;/code&gt; method.&#xA;This returns a &lt;em&gt;Match object&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Call the Match object’s &lt;code&gt;group()&lt;/code&gt; method to return the first found string of&#xA;the actual matched text.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; phone_regex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{3}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-\d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{3}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-\d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{4}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# check for a phone number&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; mo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; phone_regex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My number is 312-156-8940.&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# get match objects&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; print(mo&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;group())  &lt;span style=&#34;color:#75715e&#34;&gt;# print match objects&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;312-156-8940&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pattern-matching-capabilities&#34;&gt;Pattern matching capabilities&lt;/h2&gt;&#xA;&lt;h3 id=&#34;grouping-with-parenthesis&#34;&gt;Grouping with parenthesis&lt;/h3&gt;&#xA;&lt;p&gt;Adding parenthesis to the regular expression will create &lt;em&gt;groups&lt;/em&gt;. The different&#xA;groups can be returned with the &lt;code&gt;group()&lt;/code&gt;method, specifying the group number&#xA;(1-indexed) to return.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Atomic Habits</title>
      <link>https://gustats.com/posts/books/atomic_habits/</link>
      <pubDate>Fri, 16 May 2025 14:52:20 +0200</pubDate>
      <guid>https://gustats.com/posts/books/atomic_habits/</guid>
      <description>&lt;p&gt;Atomic Habits by &amp;hellip;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A habit is a routine or behavior that is performed regularly - and in many&#xA;cases, automatically&lt;/li&gt;&#xA;&lt;li&gt;Changes that seem small and unimportant at first, will compound into remarkable&#xA;results if you&amp;rsquo;re willing to stick with them for years.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;the-surprising-power-of-atomic-habits&#34;&gt;The surprising power of atomic habits&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Habits are the compound interest of self improvement. Every day counts for a&#xA;lot in the long run&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Getting 1% better each day will make you ~38% better after one year.&lt;/li&gt;&#xA;&lt;li&gt;Getting 1% worse each day, will decrease your performance to ~0% after one year.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Habits are a double-edged sword. They can work for you or against you.&lt;/li&gt;&#xA;&lt;li&gt;Small changes appear to make no difference until you cross a critical&#xA;threshold. The most powerful outcomes of any compounding process are delayed.&#xA;Patience is key. Example of critical threshold:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;raising the temperature 1 degree at a time unti an ice cube starts melting&lt;/li&gt;&#xA;&lt;li&gt;tectonic plates that have been coliding from years until one day they&#xA;produce an earthquake.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Atomic habits are little habits that are part of a larger system. They build&#xA;the blocks of remarkable results.&lt;/li&gt;&#xA;&lt;li&gt;For better results, forget about setting goals and focus on building a system&#xA;instead.&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;You do not rise to the level of your goals. You fall to the level of your&#xA;sytems.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-your-habits-shape-your-identity&#34;&gt;How your habits shape your identity.&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The 3 levels of change:&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Outcome&lt;/strong&gt; eg. stop procrastinating&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Process&lt;/strong&gt; eg. define a schedule&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Identity&lt;/strong&gt; eg. &amp;ldquo;I am a productive person&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;The most effective way is to focus not on what you want to achieve, but on&#xA;who you wish to become. Eg. instead of saying &amp;ldquo;No thanks, I&amp;rsquo;m trying to quit&#xA;smoking&amp;rdquo;, say &amp;ldquo;No thanks, I&amp;rsquo;m not a smoker&amp;rdquo;; focus on the identity.&lt;/li&gt;&#xA;&lt;li&gt;Your identity emerges out of your habits, every action is a vote for the type&#xA;of person you wish to become. Everytime you perform a good or bad habit, it&amp;rsquo;s a&#xA;vote that reinforces your identity. If you procrastinate, you are voting for&#xA;&amp;ldquo;I am a procrastinator&amp;rdquo;, if you do your tasks it is a vote for &amp;ldquo;I am productive&amp;rdquo;.&#xA;In the end, the goal is that the majority of votes define you as the person that&#xA;you want to be.&lt;/li&gt;&#xA;&lt;li&gt;Becoming the best version of yourself requires to continiously edit your&#xA;beliefs, and to upgrade and expand your identity.&lt;/li&gt;&#xA;&lt;li&gt;The real reason many habits matter is not because they can get you better&#xA;results (although the can do that), but because they can change your beliefs&#xA;about yourself. Going from Identity to Outcome instead of the other way around,&#xA;is the best way of creating good habits and removing bad ones.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-to-build-better-habits-in-4-simple-steps&#34;&gt;How to build better habits in 4 simple steps&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Debugging</title>
      <link>https://gustats.com/posts/programming/debug/</link>
      <pubDate>Sat, 10 May 2025 19:24:47 +0200</pubDate>
      <guid>https://gustats.com/posts/programming/debug/</guid>
      <description>&lt;h2 id=&#34;assertions&#34;&gt;Assertions&lt;/h2&gt;&#xA;&lt;p&gt;It is a sanity check to make sure the code is not doing something obviously&#xA;wrong. These are done with &lt;code&gt;assert&lt;/code&gt; statements. If the sanity check fails,&#xA;then an &lt;code&gt;assertError&lt;/code&gt; exception is raised.&lt;/p&gt;&#xA;&lt;h2 id=&#34;logging&#34;&gt;Logging&lt;/h2&gt;&#xA;&lt;p&gt;Logging is used to debug the code. It can print information, warnings, debugging&#xA;and errors while the script is running.&lt;/p&gt;&#xA;&lt;h3 id=&#34;using-the-logging-module&#34;&gt;Using the logging module&lt;/h3&gt;&#xA;&lt;p&gt;To set the logging messages the following syntax is used:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; logging&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basicConfig(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    filename&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my_log.txt&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;logging&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DEBUG,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(levelname)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%(message)s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;basicConfig&lt;/code&gt; parameters do the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reading, writing and organizing files</title>
      <link>https://gustats.com/posts/programming/file_manipulation/</link>
      <pubDate>Sat, 10 May 2025 19:14:59 +0200</pubDate>
      <guid>https://gustats.com/posts/programming/file_manipulation/</guid>
      <description>&lt;h2 id=&#34;navigating-through-system&#34;&gt;Navigating through system&lt;/h2&gt;&#xA;&lt;h3 id=&#34;path-library&#34;&gt;Path library&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;Path&lt;/code&gt; module from the &lt;code&gt;pathlib&lt;/code&gt; library allows to manipulate file paths and&#xA;navigate through the system. These are some functions in the &lt;code&gt;Path&lt;/code&gt; module:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; pathlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Path&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Path(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;folder&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;subfolder&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file.txt&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# returns path (adapted to os)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;folder/subfolder/file.txt&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;home()                              &lt;span style=&#34;color:#75715e&#34;&gt;# returns home directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cwd()                               &lt;span style=&#34;color:#75715e&#34;&gt;# get current working directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user/current/working/directory&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Getting ancestor folder of a path&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cwd()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parents[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user/current/working&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cwd()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parents[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user/current/&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cwd()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parents[&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# get the attributes of a path&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Path(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user/current/file.txt&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;anchor&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PosixPath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/user/current/file.txt&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file.txt&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stem&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;suffix&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.txt&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drive  &lt;span style=&#34;color:#75715e&#34;&gt;# what&amp;#39;s before the anchor (&amp;#39;C:&amp;#39; in Windows)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists() &lt;span style=&#34;color:#75715e&#34;&gt;# check if file/dir exists&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_dir() &lt;span style=&#34;color:#75715e&#34;&gt;# check if it is a directory&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; p&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;is_file() &lt;span style=&#34;color:#75715e&#34;&gt;# check if it is a file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;os-library&#34;&gt;os library&lt;/h3&gt;&#xA;&lt;p&gt;Another library used for navigation and manipulation of files and directories is&#xA;&lt;code&gt;os&lt;/code&gt;. This library is older than &lt;code&gt;pathlib&lt;/code&gt;, so it can do most of the things that&#xA;&lt;code&gt;pathlib&lt;/code&gt; does. Here are some useful functions not covered by the latter:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
