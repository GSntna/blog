<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bs4 on Gustavo Santana</title>
    <link>https://example.org/tags/bs4/</link>
    <description>Recent content in Bs4 on Gustavo Santana</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://example.org/tags/bs4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web Scrapping</title>
      <link>https://example.org/posts/web_scrapping/</link>
      <pubDate>Mon, 12 May 2025 10:50:29 +0200</pubDate>
      <guid>https://example.org/posts/web_scrapping/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;Web scrapping&lt;/em&gt; is a term used for a program to download and process content from&#xA;the web. Python uses several modules to achive this:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;webbrowser&lt;/code&gt;: comes with Python, opens a browser to a specific page&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;requests&lt;/code&gt;: downloads files and web pages from the internet&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;bs4&lt;/code&gt;: parses HTML&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;selenium&lt;/code&gt;: launches and controls a web browser. It is able to fill in forms&#xA;and simulate clicks on the browser.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;requests&#34;&gt;Requests&lt;/h2&gt;&#xA;&lt;p&gt;To use the &lt;code&gt;requests&lt;/code&gt; module, the function &lt;code&gt;requests.get(url)&lt;/code&gt; is used to get a&#xA;&lt;code&gt;Response&lt;/code&gt; object, which has some attributes that allow to work with the results&#xA;from the call to the url.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
