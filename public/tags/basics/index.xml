<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics on Gustavo Santana</title>
    <link>http://localhost:1313/tags/basics/</link>
    <description>Recent content in Basics on Gustavo Santana</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 May 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Regular expressions (regex)</title>
      <link>http://localhost:1313/posts/regex/</link>
      <pubDate>Sat, 10 May 2025 19:04:01 +0200</pubDate>
      <guid>http://localhost:1313/posts/regex/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Regular expressions are a powerful tool used for searching, matching and&#xA;manipulating strings based on patterns. To use it the following steps can be&#xA;followed:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Import the &lt;strong&gt;regex&lt;/strong&gt; module with &lt;code&gt;import re&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Create a &lt;em&gt;Regex object&lt;/em&gt; with the &lt;code&gt;re.compile()&lt;/code&gt; function.&#xA;(Remember to use a raw string.)&lt;/li&gt;&#xA;&lt;li&gt;Pass the string to search into the Regex object’s &lt;code&gt;search()&lt;/code&gt; method.&#xA;This returns a &lt;em&gt;Match object&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Call the Match object’s &lt;code&gt;group()&lt;/code&gt; method to return the first found string of&#xA;the actual matched text.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; re&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; phone_regex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compile(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{3}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-\d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{3}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-\d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{4}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# check for a phone number&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; mo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; phone_regex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;search(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My number is 312-156-8940.&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# get match objects&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; print(mo&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;group())  &lt;span style=&#34;color:#75715e&#34;&gt;# print match objects&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;312-156-8940&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;pattern-matching-capabilities&#34;&gt;Pattern matching capabilities&lt;/h2&gt;&#xA;&lt;h3 id=&#34;grouping-with-parenthesis&#34;&gt;Grouping with parenthesis&lt;/h3&gt;&#xA;&lt;p&gt;Adding parenthesis to the regular expression will create &lt;em&gt;groups&lt;/em&gt;. The different&#xA;groups can be returned with the &lt;code&gt;group()&lt;/code&gt;method, specifying the group number&#xA;(1-indexed) to return.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
